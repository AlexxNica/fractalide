<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="chap-conventions">

<title>Coding conventions</title>


<section xml:id="sec-syntax"><title>Syntax</title>

<itemizedlist>

  <listitem><para>Use 2 spaces of indentation per indentation level in
  Nix expressions and Rust code, 4 spaces in shell scripts.</para></listitem>

  <listitem><para>Do not use tab characters, i.e. configure your
  editor to use soft tabs.  For instance, use <literal>(setq-default
  indent-tabs-mode nil)</literal> in Emacs.  Everybody has different
  tab settings so it’s asking for trouble.</para></listitem>

  <listitem><para>Use <literal>lowerCamelCase</literal> for variable
  names, not <literal>UpperCamelCase</literal>.</para></listitem>
  <listitem><para>Do not use an underscore in the component names. Nix will automatically add an underscore where there is a folder level. If you add an underscore you break reverse lookups.</para></listitem>

  <listitem><para>Use <literal>lowerCamelCase</literal> for component inputs and outputs.</para></listitem>




</itemizedlist>

</section>


<section xml:id="sec-package-naming"><title>Package naming</title>

<para>There are a few naming guidelines:

<itemizedlist>

  <listitem><para>The components are named according to the folder hierarchy they are in.</para></listitem>

  <listitem><para>Don’t use uppercase letters in the
  <literal>name</literal> attribute — e.g., use
  <literal>"maths_boolean_not"</literal> instead of
  <literal>"Maths_Boolean_NOT"</literal>.</para></listitem>

  <listitem><para>Components have no versions.
   Only <literal>vm</literal> has a version.</para></listitem>

  <listitem><para>Do not use <literal>_</literal> in the component/subnet/contract name.</para></listitem>

</itemizedlist>

</para>

</section>


<section xml:id="sec-organisation"><title>File naming and organisation</title>

<para>Names of files and directories should be in lowercase, with
no dashes or underscores between words — not in camel case.</para>

<section xml:id="sec-hierarchy"><title>Hierarchy</title>

<para>Each component should be stored in its own directory somewhere in
the <filename>components/</filename> tree, i.e. in
<filename>components/<replaceable>category</replaceable>/<replaceable>subcategory</replaceable>/<replaceable>...</replaceable>/<replaceable>pkgname</replaceable></filename>.
Below are some rules for picking the right category for a package.
Many packages fall under several categories; what matters is the
<emphasis>primary</emphasis> purpose of a package.  For example, the
<literal>libxml2</literal> package builds both a library and some
tools; but it’s a library foremost, so it goes under
<filename>components/development/libraries</filename>.</para>

<para>When in doubt, consider refactoring the
<filename>components/</filename> tree, e.g. creating new categories or
splitting up an existing category.</para>

<variablelist>
  <varlistentry>
    <term>If it’s used to support <emphasis>software development</emphasis>:</term>
    <listitem>
      <variablelist>
        <varlistentry>
          <term>If it’s a <emphasis>library</emphasis> used by other packages:</term>
          <listitem>
            <para><filename>development/libraries</filename> (e.g. <filename>libxml2</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s a <emphasis>compiler</emphasis>:</term>
          <listitem>
            <para><filename>development/compilers</filename> (e.g. <filename>gcc</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s an <emphasis>interpreter</emphasis>:</term>
          <listitem>
            <para><filename>development/interpreters</filename> (e.g. <filename>guile</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s a (set of) development <emphasis>tool(s)</emphasis>:</term>
          <listitem>
            <variablelist>
              <varlistentry>
                <term>If it’s a <emphasis>parser generator</emphasis> (including lexers):</term>
                <listitem>
                  <para><filename>development/tools/parsing</filename> (e.g. <filename>bison</filename>, <filename>flex</filename>)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>If it’s a <emphasis>build manager</emphasis>:</term>
                <listitem>
                  <para><filename>development/tools/build-managers</filename> (e.g. <filename>gnumake</filename>)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Else:</term>
                <listitem>
                  <para><filename>development/tools/misc</filename> (e.g. <filename>binutils</filename>)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Else:</term>
          <listitem>
            <para><filename>development/misc</filename></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>If it’s a (set of) <emphasis>tool(s)</emphasis>:</term>
    <listitem>
      <para>(A tool is a relatively small program, especially one intented
      to be used non-interactively.)</para>
      <variablelist>
        <varlistentry>
          <term>If it’s for <emphasis>networking</emphasis>:</term>
          <listitem>
            <para><filename>tools/networking</filename> (e.g. <filename>wget</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s for <emphasis>text processing</emphasis>:</term>
          <listitem>
            <para><filename>tools/text</filename> (e.g. <filename>diffutils</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s a <emphasis>system utility</emphasis>, i.e.,
          something related or essential to the operation of a
          system:</term>
          <listitem>
            <para><filename>tools/system</filename> (e.g. <filename>cron</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s an <emphasis>archiver</emphasis> (which may
          include a compression function):</term>
          <listitem>
            <para><filename>tools/archivers</filename> (e.g. <filename>zip</filename>, <filename>tar</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s a <emphasis>compression</emphasis> program:</term>
          <listitem>
            <para><filename>tools/compression</filename> (e.g. <filename>gzip</filename>, <filename>bzip2</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s a <emphasis>security</emphasis>-related program:</term>
          <listitem>
            <para><filename>tools/security</filename> (e.g. <filename>nmap</filename>, <filename>gnupg</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Else:</term>
          <listitem>
            <para><filename>tools/misc</filename></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>If it’s a <emphasis>shell</emphasis>:</term>
    <listitem>
      <para><filename>shells</filename> (e.g. <filename>bash</filename>)</para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>If it’s a <emphasis>server</emphasis>:</term>
    <listitem>
      <variablelist>
        <varlistentry>
          <term>If it’s a web server:</term>
          <listitem>
            <para><filename>servers/http</filename> (e.g. <filename>apache-httpd</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s an implementation of the X Windowing System:</term>
          <listitem>
            <para><filename>servers/x11</filename> (e.g. <filename>xorg</filename> — this includes the client libraries and programs)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Else:</term>
          <listitem>
            <para><filename>servers/misc</filename></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>If it’s a <emphasis>desktop environment</emphasis>:</term>
    <listitem>
      <para><filename>desktops</filename> (e.g. <filename>kde</filename>, <filename>gnome</filename>, <filename>enlightenment</filename>)</para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>If it’s a <emphasis>window manager</emphasis>:</term>
    <listitem>
      <para><filename>applications/window-managers</filename> (e.g. <filename>awesome</filename>, <filename>compiz</filename>, <filename>stumpwm</filename>)</para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>If it’s an <emphasis>application</emphasis>:</term>
    <listitem>
      <para>A (typically large) program with a distinct user
      interface, primarily used interactively.</para>
      <variablelist>
        <varlistentry>
          <term>If it’s a <emphasis>version management system</emphasis>:</term>
          <listitem>
            <para><filename>applications/version-management</filename> (e.g. <filename>subversion</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s for <emphasis>video playback / editing</emphasis>:</term>
          <listitem>
            <para><filename>applications/video</filename> (e.g. <filename>vlc</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s for <emphasis>graphics viewing / editing</emphasis>:</term>
          <listitem>
            <para><filename>applications/graphics</filename> (e.g. <filename>gimp</filename>)</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s for <emphasis>networking</emphasis>:</term>
          <listitem>
            <variablelist>
              <varlistentry>
                <term>If it’s a <emphasis>mailreader</emphasis>:</term>
                <listitem>
                  <para><filename>applications/networking/mailreaders</filename> (e.g. <filename>thunderbird</filename>)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>If it’s a <emphasis>newsreader</emphasis>:</term>
                <listitem>
                  <para><filename>applications/networking/newsreaders</filename> (e.g. <filename>pan</filename>)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>If it’s a <emphasis>web browser</emphasis>:</term>
                <listitem>
                  <para><filename>applications/networking/browsers</filename> (e.g. <filename>firefox</filename>)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Else:</term>
                <listitem>
                  <para><filename>applications/networking/misc</filename></para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Else:</term>
          <listitem>
            <para><filename>applications/misc</filename></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>If it’s <emphasis>data</emphasis> (i.e., does not have a
    straight-forward executable semantics):</term>
    <listitem>
      <variablelist>
        <varlistentry>
          <term>If it’s a <emphasis>font</emphasis>:</term>
          <listitem>
            <para><filename>data/fonts</filename></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>If it’s related to <emphasis>SGML/XML processing</emphasis>:</term>
          <listitem>
            <variablelist>
              <varlistentry>
                <term>If it’s an <emphasis>XML DTD</emphasis>:</term>
                <listitem>
                  <para><filename>data/sgml+xml/schemas/xml-dtd</filename> (e.g. <filename>docbook</filename>)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>If it’s an <emphasis>XSLT stylesheet</emphasis>:</term>
                <listitem>
                  <para>(Okay, these are executable...)</para>
                  <para><filename>data/sgml+xml/stylesheets/xslt</filename> (e.g. <filename>docbook-xsl</filename>)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>If it’s a <emphasis>game</emphasis>:</term>
    <listitem>
      <para><filename>games</filename></para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>Else:</term>
    <listitem>
      <para><filename>misc</filename></para>
    </listitem>
  </varlistentry>
</variablelist>

</section>

<section xml:id="sec-versioning"><title>Versioning</title>

<para>There are no versions of components and contracts.
What should be maintained is the component port names.
If a component is stable (widely used) their inputs and outputs may not be changed.</para>

</section>
</section>
</chapter>
